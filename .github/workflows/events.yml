name: Build Mongo Auth App

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-app:
    environment: test
    env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_CLUSTER: ${{ secrets.DB_CLUSTER }}
          DB_NAME: ${{ secrets.DB_NAME }}

    runs-on: ubuntu-latest



    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3

      - name: üîß Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # ----------------- BACKEND -----------------
      - name: üì¶ Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: ‚öôÔ∏è Run backend using environment variables
        working-directory: ./backend
        
        run: |
          echo "Connecting to MongoDB with DB_USER=$DB_USER"
          echo "DB_URI=mongodb+srv://${DB_USER}:${DB_PASS}@${DB_CLUSTER}/${DB_NAME}?retryWrites=true&w=majority"
          echo "DB_USER:${DB_USER} , DB_CLUSTER:${DB_CLUSTER}, DB_NAME=${DB_NAME}"
          node app.js &  # Simulate backend start (use PM2/Docker for real deploy)

      # ----------------- FRONTEND -----------------
      - name: üì¶ Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: üöÄ Start frontend server
        working-directory: ./frontend
        env:
            FRONTEND_PORT: 3000
        run: |
          echo "Frontend starting on http://localhost:${{env.FRONTEND_PORT}}"
          node server.js &  # Simulate frontend run

      - name: ‚úÖ Smoke test (example)
        run: |
          echo "Testing if servers are alive..."
          curl --silent http://localhost:5000/api/login || echo "Backend may not be responding"
          curl --silent http://localhost:3000 || echo "Frontend may not be responding"
